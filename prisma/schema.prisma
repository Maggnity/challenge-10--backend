generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tasks {
  id             Int             @id @default(autoincrement())
  title          String?         @db.VarChar(45)
  description    String?         @db.VarChar(45)
  startDate      String?         @db.VarChar(45)
  endDate        String?         @db.VarChar(45)
  status         Int?
  category       Int?
  tasks_category tasks_category? @relation(fields: [category], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "category")
  tasks_status   tasks_status?   @relation(fields: [status], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "status")

  @@index([category], map: "category_idx")
  @@index([status], map: "status_idx")
}

model tasks_category {
  id             Int     @id @default(autoincrement())
  category_value String  @db.VarChar(45)
  category_text  String  @db.VarChar(45)
  checked        Boolean @default(true)
  category_color String? @db.VarChar(45)
  tasks          tasks[]
}

model tasks_status {
  id           Int     @id @default(autoincrement())
  status_value String? @db.VarChar(45)
  status_text  String? @db.VarChar(45)
  tasks        tasks[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model account {
  id             String  @id @unique @db.VarChar(100)
  name           String? @db.VarChar(100)
  email          String? @unique @db.VarChar(100)
  password       String? @db.VarChar(100)
  surname        String? @db.VarChar(100)
  verified_email Boolean @default(false)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model session {
  id    String  @id @unique @db.VarChar(100)
  email String? @db.VarChar(100)
  token String? @db.VarChar(200)
}
